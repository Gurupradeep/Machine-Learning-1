source('C:/Users/Prajwala/Desktop/ex.R')
source('C:/Users/Prajwala/Desktop/ex.R')
source('C:/Users/Prajwala/Desktop/ex.R')
install.packages("xgboost")
library(caret)
install.packages("caret")
library(caret)
install.packages("minqa")
install.packages("pbkrtest")
install.packages("caret")
install.packages("caret")
library(caret)
install.packages("nlopt-devel")
install.packages("caret")
library(caret,"C:/Users/Prajwala/AppData/Local/Temp/RtmpOGSWXx/downloaded_packages")
library(caret,lib.loc= "C:/Users/Prajwala/AppData/Local/Temp/RtmpOGSWXx/downloaded_packages")
dmy <- dummyVars(" ~ .", data = train, fullRank=T)
train <- data.frame(predict(dmy, newdata = train))
library(caret,lib.loc= "C:/Users/Prajwala/AppData/Local/Temp/RtmpOGSWXx/downloaded_packages")
library(xgboost)
library("xgboost", lib.loc="E:/R-3.3.1/library")
detach("package:xgboost", unload=TRUE)
library("xgboost", lib.loc="E:/R-3.3.1/library")
install.packages(xgboost,dependencies=TRUE)
detach("package:xgboost", unload=TRUE)
library("utils", lib.loc="E:/R-3.3.1/library")
library("xgboost", lib.loc="E:/R-3.3.1/library")
detach("package:utils", unload=TRUE)
detach("package:xgboost", unload=TRUE)
library(xgboost)
install.packages("xgboost",dependencies=TRUE)
library(xgboost,lib.loc="C:\sers\Prajwala\AppData\Local\Temp\RtmpKgZOVe\downloaded_packages")
library(xgboost,lib.loc="C:/Users/Prajwala/AppData/Local/Temp/RtmpKgZOVe/downloaded_packages")
library(xgboost,lib.loc="C://Users//Prajwala//AppData//Local//Temp//RtmpKgZOVe//downloaded_packages")
install.packages("xgboost",dependencies=TRUE)
library(xgboost,lib.loc="C://Users//Prajwala//AppData//Local//Temp//RtmpKgZOVe//downloaded_packages")
library(xgboost)#,lib.loc="C://Users//Prajwala//AppData//Local//Temp//RtmpKgZOVe//downloaded_packages")
library(xgboost,lib.loc="C://Users//Prajwala//AppData//Local//Temp//RtmpKgZOVe//downloaded_packages")
library(xgboost,lib.loc="C:/Users/Prajwala/AppData/Local/Temp/RtmpKgZOVe/downloaded_packages")
require(devtools)
install.packages("devtools")
install_github('xgboost','tqchen',subdir='R-package')
install_github('xgboost','tqchen',subdir='R-package')
install.packages("devtools")
library("devtools")
library("devtools")
library("devtools",lib.loc = "C:/Users/Prajwala/AppData/Local/Temp/RtmpkLl0bK/downloaded_packages")
library("devtools",lib.loc = "C:/Users/Prajwala/AppData/Local/Temp/RtmpkLl0bK/downloaded_packages")
install.packages("drat", repos="https://cran.rstudio.com")
drat:::addRepo("dmlc")
install.packages("xgboost", repos="http://dmlc.ml/drat/", type="source")
library("xgboost", lib.loc="E:/R-3.3.1/library")
detach("package:xgboost", unload=TRUE)
library("tools", lib.loc="E:/R-3.3.1/library")
library("xgboost", lib.loc="C:/Users/Prajwala/AppData/Local/Temp/RtmpkLl0bK/downloaded_packages")
library("xgboost", lib.loc="C:/Users/Prajwala/AppData/Local/Temp/RtmpkLl0bK/downloaded_packages")
library("drat", lib.loc="C:/Users/Prajwala/AppData/Local/Temp/RtmpkLl0bK/downloaded_packages")
library("drat_0.0.1", lib.loc="C:/Users/Prajwala/AppData/Local/Temp/RtmpkLl0bK/downloaded_packages")
library("drat_0.0.1.tar.gz", lib.loc="C:/Users/Prajwala/AppData/Local/Temp/RtmpkLl0bK/downloaded_packages")
library("drat_0.1.1.tar.gz", lib.loc="C:/Users/Prajwala/AppData/Local/Temp/RtmpkLl0bK/downloaded_packages")
library("drat_0.1.1", lib.loc="C:/Users/Prajwala/AppData/Local/Temp/RtmpkLl0bK/downloaded_packages")
library("drat", lib.loc="C:/Users/Prajwala/AppData/Local/Temp/RtmpkLl0bK/downloaded_packages")
install.packages("xgboost", repos="http://dmlc.ml/drat/", type="source")
.libPaths()
library("xgboost", lib.loc="C:/Users/Prajwala/AppData/Local/Temp/RtmpkLl0bK/downloaded_packages")
library("xgboost")#, lib.loc="C:/Users/Prajwala/AppData/Local/Temp/RtmpkLl0bK/downloaded_packages")
installed.packages(lib.loc = ".")
install.packages("xgboost")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("dmlc/xgboost", subdir = "R-package")
devtools::install_github("dmlc/xgboost", subdir = "R-package")
install.packages("ggplot2")
install.packages("Ckmeans.1d.dp")
demo(package = "xgboost")
demo("basic_walkthrough", package = "xgboost")
library(xgboost)
library(xgboost)
library(xgboost)
devtools::install_github("dmlc/xgboost", subdir = "R-package")
devtools::install_github("dmlc/xgboost", subdir = "R-package")
install.packages("xgboost")
library(xgboost)
library(xgboost)
library(xgboost)
library("xgboost", lib.loc="E:/R-3.3.1/library")
install.packages("chron")
library(xgboost)
library(datasets)
head(iris)
library(ggplot2)
ggplot(iris, aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
head(dist(iris[,3:4]))
clusters <- hclust(dist(iris[, 3:4]),method='average')
rect.hclust(hclust(dist(iris[, 3:4]),method='average'),h=3)
plot(clusters)
rect.hclust(hclust(dist(iris[, 3:4]),method='average'),h=3)
setwd("E:/Computer Engg/Machine learning/RScripts/CoverType");
train<-read.csv("train.csv");
library(rpart)
library(randomForest)
train$Highwater[train$Vertical_Distance_To_Hydrology < 0]<-0
train$Highwater[train$Vertical_Distance_To_Hydrology > 0]<-1
test$Highwater [test$Vertical_Distance_To_Hydrology < 0]<-0
test$Highwater [test$Vertical_Distance_To_Hydrology > 0]<-1
setwd("E:/Computer Engg/Machine learning/RScripts/CoverType");
train<-read.csv("train.csv");
test<-read.csv("test.csv");
library(rpart)
library(randomForest)
train$Highwater[train$Vertical_Distance_To_Hydrology < 0]<-0
train$Highwater[train$Vertical_Distance_To_Hydrology > 0]<-1
test$Highwater [test$Vertical_Distance_To_Hydrology < 0]<-0
test$Highwater [test$Vertical_Distance_To_Hydrology > 0]<-1
train$Aspect2[(train$Aspect)+180>360]<-train$Aspect-180
train$Aspect2[(train$Aspect)+180<360]<-train$Aspect+180
str(train)
rf.cv <- rfcv(train, as.factor(Cover_Type), cv.fold=10)
rf.cv <- rfcv(train, as.factor(train$Cover_Type), cv.fold=10)
train<-train[is.na(,)==0]
rf.cv <- rfcv(na.omit(train), as.factor(train$Cover_Type), cv.fold=10)
train<-na.omit(train)
rf.cv <- rfcv(train,as.factor(train$Cover_Type), cv.fold=10)
library(datasets)
rf.cv <- rfcv(iris,as.factor(train$Species), cv.fold=10)
head(iris)
rf.cv <- rfcv(iris,as.factor(iris$Species), cv.fold=10)
with(rf.cv, plot(n.var, error.cv))
